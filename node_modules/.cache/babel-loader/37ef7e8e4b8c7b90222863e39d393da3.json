{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError } from \"../common/Exports\";\nimport { HeaderNames } from \"./HeaderNames\";\nimport { AuthInfo } from \"./IAuthentication\";\n/**\n * @class\n */\n\nexport class CognitiveSubscriptionKeyAuthentication {\n  /**\n   * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n   * @constructor\n   * @param {string} subscriptionKey - The subscription key\n   */\n  constructor(subscriptionKey) {\n    if (!subscriptionKey) {\n      throw new ArgumentNullError(\"subscriptionKey\");\n    }\n\n    this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\n  }\n  /**\n   * Fetches the subscription key.\n   * @member\n   * @function\n   * @public\n   * @param {string} authFetchEventId - The id to fetch.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  fetch(authFetchEventId) {\n    return Promise.resolve(this.privAuthInfo);\n  }\n  /**\n   * Fetches the subscription key.\n   * @member\n   * @function\n   * @public\n   * @param {string} authFetchEventId - The id to fetch.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  fetchOnExpiry(authFetchEventId) {\n    return Promise.resolve(this.privAuthInfo);\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/CognitiveSubscriptionKeyAuthentication.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SACI,iBADJ,QAEO,mBAFP;AAGA,SAAS,WAAT,QAA4B,eAA5B;AACA,SACI,QADJ,QAGO,mBAHP;AAKA;;AAEG;;AACH,OAAM,MAAO,sCAAP,CAA6C;AAG/C;;;;AAIG;AACH,EAAA,WAAA,CAAmB,eAAnB,EAA0C;AACtC,QAAI,CAAC,eAAL,EAAsB;AAClB,YAAM,IAAI,iBAAJ,CAAsB,iBAAtB,CAAN;AACH;;AAED,SAAK,YAAL,GAAoB,IAAI,QAAJ,CAAa,WAAW,CAAC,OAAzB,EAAkC,eAAlC,CAApB;AACH;AAED;;;;;;AAMG;AACH;;;AACO,EAAA,KAAK,CAAC,gBAAD,EAAyB;AACjC,WAAO,OAAO,CAAC,OAAR,CAAgB,KAAK,YAArB,CAAP;AACH;AAED;;;;;;AAMG;AACH;;;AACO,EAAA,aAAa,CAAC,gBAAD,EAAyB;AACzC,WAAO,OAAO,CAAC,OAAR,CAAgB,KAAK,YAArB,CAAP;AACH;;AAtC8C","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    public constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public fetch(authFetchEventId: string): Promise<AuthInfo> {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo> {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}