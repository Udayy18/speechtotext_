{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'universal-cookie';\nexport async function getTokenOrRefresh() {\n  const cookie = new Cookie();\n  const speechToken = cookie.get('speech-token');\n\n  if (speechToken === undefined) {\n    try {\n      const res = await axios.get('http://localhost:4000/api/get-speech-token');\n      const token = res.data.token;\n      const region = res.data.region;\n      cookie.set('speech-token', region + ':' + token, {\n        maxAge: 540,\n        path: '/'\n      });\n      console.log('Token fetched from back-end: ' + token);\n      return {\n        authToken: token,\n        region: region\n      };\n    } catch (err) {\n      console.log(err.response.data);\n      return {\n        authToken: null,\n        error: err.response.data\n      };\n    }\n  } else {\n    console.log('Token fetched from cookie: ' + speechToken);\n    const idx = speechToken.indexOf(':');\n    return {\n      authToken: speechToken.slice(idx + 1),\n      region: speechToken.slice(0, idx)\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/91959/Desktop/js_speechtotext/AzureSpeechReactSample/src/token_util.js"],"names":["axios","Cookie","getTokenOrRefresh","cookie","speechToken","get","undefined","res","token","data","region","set","maxAge","path","console","log","authToken","err","response","error","idx","indexOf","slice"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAO,eAAeC,iBAAf,GAAmC;AACtC,QAAMC,MAAM,GAAG,IAAIF,MAAJ,EAAf;AACA,QAAMG,WAAW,GAAGD,MAAM,CAACE,GAAP,CAAW,cAAX,CAApB;;AAEA,MAAID,WAAW,KAAKE,SAApB,EAA+B;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMP,KAAK,CAACK,GAAN,CAAU,4CAAV,CAAlB;AACA,YAAMG,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB;AACA,YAAME,MAAM,GAAGH,GAAG,CAACE,IAAJ,CAASC,MAAxB;AACAP,MAAAA,MAAM,CAACQ,GAAP,CAAW,cAAX,EAA2BD,MAAM,GAAG,GAAT,GAAeF,KAA1C,EAAiD;AAACI,QAAAA,MAAM,EAAE,GAAT;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAAjD;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCP,KAA9C;AACA,aAAO;AAAEQ,QAAAA,SAAS,EAAER,KAAb;AAAoBE,QAAAA,MAAM,EAAEA;AAA5B,OAAP;AACH,KARD,CAQE,OAAOO,GAAP,EAAY;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAJ,CAAaT,IAAzB;AACA,aAAO;AAAEO,QAAAA,SAAS,EAAE,IAAb;AAAmBG,QAAAA,KAAK,EAAEF,GAAG,CAACC,QAAJ,CAAaT;AAAvC,OAAP;AACH;AACJ,GAbD,MAaO;AACHK,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCX,WAA5C;AACA,UAAMgB,GAAG,GAAGhB,WAAW,CAACiB,OAAZ,CAAoB,GAApB,CAAZ;AACA,WAAO;AAAEL,MAAAA,SAAS,EAAEZ,WAAW,CAACkB,KAAZ,CAAkBF,GAAG,GAAG,CAAxB,CAAb;AAAyCV,MAAAA,MAAM,EAAEN,WAAW,CAACkB,KAAZ,CAAkB,CAAlB,EAAqBF,GAArB;AAAjD,KAAP;AACH;AACJ","sourcesContent":["import axios from 'axios';\r\nimport Cookie from 'universal-cookie';\r\n\r\nexport async function getTokenOrRefresh() {\r\n    const cookie = new Cookie();\r\n    const speechToken = cookie.get('speech-token');\r\n\r\n    if (speechToken === undefined) {\r\n        try {\r\n            const res = await axios.get('http://localhost:4000/api/get-speech-token');\r\n            const token = res.data.token;\r\n            const region = res.data.region;\r\n            cookie.set('speech-token', region + ':' + token, {maxAge: 540, path: '/'});\r\n\r\n            console.log('Token fetched from back-end: ' + token);\r\n            return { authToken: token, region: region };\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            return { authToken: null, error: err.response.data };\r\n        }\r\n    } else {\r\n        console.log('Token fetched from cookie: ' + speechToken);\r\n        const idx = speechToken.indexOf(':');\r\n        return { authToken: speechToken.slice(idx + 1), region: speechToken.slice(0, idx) };\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}