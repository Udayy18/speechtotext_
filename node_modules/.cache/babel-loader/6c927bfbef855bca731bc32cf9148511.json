{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus } from \"../Exports\";\nexport class SimpleSpeechPhrase {\n  constructor(json) {\n    this.privSimpleSpeechPhrase = JSON.parse(json);\n    this.privSimpleSpeechPhrase.RecognitionStatus = RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus];\n  }\n\n  static fromJSON(json) {\n    return new SimpleSpeechPhrase(json);\n  }\n\n  get RecognitionStatus() {\n    return this.privSimpleSpeechPhrase.RecognitionStatus;\n  }\n\n  get DisplayText() {\n    return this.privSimpleSpeechPhrase.DisplayText;\n  }\n\n  get Offset() {\n    return this.privSimpleSpeechPhrase.Offset;\n  }\n\n  get Duration() {\n    return this.privSimpleSpeechPhrase.Duration;\n  }\n\n  get Language() {\n    return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\n  }\n\n  get LanguageDetectionConfidence() {\n    return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\n  }\n\n  get SpeakerId() {\n    return this.privSimpleSpeechPhrase.SpeakerId;\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/ServiceMessages/SimpleSpeechPhrase.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAAS,iBAAT,QAAkC,YAAlC;AAiBA,OAAM,MAAO,kBAAP,CAAyB;AAG3B,EAAA,WAAA,CAAoB,IAApB,EAAgC;AAC5B,SAAK,sBAAL,GAA8B,IAAI,CAAC,KAAL,CAAW,IAAX,CAA9B;AACA,SAAK,sBAAL,CAA4B,iBAA5B,GAAgD,iBAAiB,CAAC,KAAK,sBAAL,CAA4B,iBAA7B,CAAjE;AACH;;AAEM,SAAO,QAAP,CAAgB,IAAhB,EAA4B;AAC/B,WAAO,IAAI,kBAAJ,CAAuB,IAAvB,CAAP;AACH;;AAED,MAAW,iBAAX,GAA4B;AACxB,WAAO,KAAK,sBAAL,CAA4B,iBAAnC;AACH;;AAED,MAAW,WAAX,GAAsB;AAClB,WAAO,KAAK,sBAAL,CAA4B,WAAnC;AACH;;AAED,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,sBAAL,CAA4B,MAAnC;AACH;;AAED,MAAW,QAAX,GAAmB;AACf,WAAO,KAAK,sBAAL,CAA4B,QAAnC;AACH;;AAED,MAAW,QAAX,GAAmB;AACf,WAAO,KAAK,sBAAL,CAA4B,eAA5B,KAAgD,SAAhD,GAA4D,SAA5D,GAAwE,KAAK,sBAAL,CAA4B,eAA5B,CAA4C,QAA3H;AACH;;AAED,MAAW,2BAAX,GAAsC;AAClC,WAAO,KAAK,sBAAL,CAA4B,eAA5B,KAAgD,SAAhD,GAA4D,SAA5D,GAAwE,KAAK,sBAAL,CAA4B,eAA5B,CAA4C,UAA3H;AACH;;AAED,MAAW,SAAX,GAAoB;AAChB,WAAO,KAAK,sBAAL,CAA4B,SAAnC;AACH;;AAtC0B","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase\r\nexport interface ISimpleSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    DisplayText: string;\r\n    Offset?: number;\r\n    Duration?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPrimaryLanguage {\r\n    Language: string;\r\n    Confidence: string;\r\n}\r\n\r\nexport class SimpleSpeechPhrase implements ISimpleSpeechPhrase {\r\n    private privSimpleSpeechPhrase: ISimpleSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privSimpleSpeechPhrase = JSON.parse(json) as ISimpleSpeechPhrase;\r\n        this.privSimpleSpeechPhrase.RecognitionStatus = RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): SimpleSpeechPhrase {\r\n        return new SimpleSpeechPhrase(json);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get DisplayText(): string {\r\n        return this.privSimpleSpeechPhrase.DisplayText;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSimpleSpeechPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSimpleSpeechPhrase.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSimpleSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}