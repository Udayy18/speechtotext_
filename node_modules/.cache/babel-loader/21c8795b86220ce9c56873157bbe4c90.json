{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class TurnStatusResponsePayload {\n  constructor(json) {\n    this.privMessageStatusResponse = JSON.parse(json);\n  }\n\n  static fromJSON(json) {\n    return new TurnStatusResponsePayload(json);\n  }\n\n  get interactionId() {\n    return this.privMessageStatusResponse.interactionId;\n  }\n\n  get conversationId() {\n    return this.privMessageStatusResponse.conversationId;\n  }\n\n  get statusCode() {\n    // Payloads may contain a limited set of textual representations or a numeric status\n    // code. The textual values are here converted into numeric ones.\n    switch (this.privMessageStatusResponse.statusCode) {\n      case \"Success\":\n        return 200;\n\n      case \"Failed\":\n        return 400;\n\n      case \"TimedOut\":\n        return 429;\n\n      default:\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privMessageStatusResponse.statusCode;\n    }\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/ServiceMessages/TurnStatusPayload.ts"],"names":[],"mappings":"AAAA;AACA;AAQA,OAAM,MAAO,yBAAP,CAAgC;AAGlC,EAAA,WAAA,CAAoB,IAApB,EAAgC;AAC5B,SAAK,yBAAL,GAAiC,IAAI,CAAC,KAAL,CAAW,IAAX,CAAjC;AACH;;AAEM,SAAO,QAAP,CAAgB,IAAhB,EAA4B;AAC/B,WAAO,IAAI,yBAAJ,CAA8B,IAA9B,CAAP;AACH;;AAED,MAAW,aAAX,GAAwB;AACpB,WAAO,KAAK,yBAAL,CAA+B,aAAtC;AACH;;AAED,MAAW,cAAX,GAAyB;AACrB,WAAO,KAAK,yBAAL,CAA+B,cAAtC;AACH;;AAED,MAAW,UAAX,GAAqB;AACjB;AACA;AACA,YAAQ,KAAK,yBAAL,CAA+B,UAAvC;AACI,WAAK,SAAL;AACI,eAAO,GAAP;;AACJ,WAAK,QAAL;AACI,eAAO,GAAP;;AACJ,WAAK,UAAL;AACI,eAAO,GAAP;;AACJ;AACI;AACA,eAAO,KAAK,yBAAL,CAA+B,UAAtC;AATR;AAWH;;AAjCiC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface ITurnStatusResponsePayload {\r\n    interactionId: string;\r\n    conversationId: string;\r\n    statusCode: any;\r\n}\r\n\r\nexport class TurnStatusResponsePayload implements ITurnStatusResponsePayload {\r\n    private privMessageStatusResponse: ITurnStatusResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privMessageStatusResponse = JSON.parse(json) as ITurnStatusResponsePayload;\r\n    }\r\n\r\n    public static fromJSON(json: string): TurnStatusResponsePayload {\r\n        return new TurnStatusResponsePayload(json);\r\n    }\r\n\r\n    public get interactionId(): string {\r\n        return this.privMessageStatusResponse.interactionId;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privMessageStatusResponse.conversationId;\r\n    }\r\n\r\n    public get statusCode(): any {\r\n        // Payloads may contain a limited set of textual representations or a numeric status\r\n        // code. The textual values are here converted into numeric ones.\r\n        switch (this.privMessageStatusResponse.statusCode) {\r\n            case \"Success\":\r\n                return 200;\r\n            case \"Failed\":\r\n                return 400;\r\n            case \"TimedOut\":\r\n                return 429;\r\n            default:\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return this.privMessageStatusResponse.statusCode;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}