{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyCollection, ResultReason, SynthesisResult, VoiceInfo } from \"./Exports\";\n/**\n * Defines result of speech synthesis.\n * @class SynthesisVoicesResult\n * Added in version 1.20.0\n */\n\nexport class SynthesisVoicesResult extends SynthesisResult {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param requestId - result id for request.\n   * @param json - json payload from endpoint.\n   */\n  constructor(requestId, json, errorDetails) {\n    if (Array.isArray(json)) {\n      super(requestId, ResultReason.VoicesListRetrieved, undefined, new PropertyCollection());\n      this.privVoices = [];\n\n      for (const item of json) {\n        this.privVoices.push(new VoiceInfo(item));\n      }\n    } else {\n      super(requestId, ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new PropertyCollection());\n    }\n  }\n  /**\n   * The list of voices\n   * @member SynthesisVoicesResult.prototype.voices\n   * @function\n   * @public\n   * @returns {VoiceInfo[]} List of synthesized voices.\n   */\n\n\n  get voices() {\n    return this.privVoices;\n  }\n\n}","map":{"version":3,"sources":["src/sdk/SynthesisVoicesResult.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAAS,kBAAT,EAA6B,YAA7B,EAA2C,eAA3C,EAA4D,SAA5D,QAA6E,WAA7E;AAEA;;;;AAIG;;AACH,OAAM,MAAO,qBAAP,SAAqC,eAArC,CAAoD;AAGtD;;;;;AAKG;AACH,EAAA,WAAA,CAAmB,SAAnB,EAAsC,IAAtC,EAAiD,YAAjD,EAAqE;AACjE,QAAI,KAAK,CAAC,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACrB,YAAM,SAAN,EAAiB,YAAY,CAAC,mBAA9B,EAAmD,SAAnD,EAA8D,IAAI,kBAAJ,EAA9D;AACA,WAAK,UAAL,GAAkB,EAAlB;;AACA,WAAK,MAAM,IAAX,IAAmB,IAAnB,EAAyB;AACrB,aAAK,UAAL,CAAgB,IAAhB,CAAqB,IAAI,SAAJ,CAAc,IAAd,CAArB;AACH;AACJ,KAND,MAMO;AACH,YAAM,SAAN,EAAiB,YAAY,CAAC,QAA9B,EAAwC,YAAY,GAAG,YAAH,GAAkB,+BAAtE,EAAuG,IAAI,kBAAJ,EAAvG;AACH;AACJ;AAED;;;;;;AAMG;;;AACH,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,UAAZ;AACH;;AA9BqD","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SynthesisResult, VoiceInfo } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SynthesisVoicesResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisVoicesResult extends SynthesisResult {\r\n    private privVoices: VoiceInfo[];\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param requestId - result id for request.\r\n     * @param json - json payload from endpoint.\r\n     */\r\n    public constructor(requestId: string, json: any, errorDetails: string ) {\r\n        if (Array.isArray(json)) {\r\n            super(requestId, ResultReason.VoicesListRetrieved, undefined, new PropertyCollection());\r\n            this.privVoices = [];\r\n            for (const item of json) {\r\n                this.privVoices.push(new VoiceInfo(item as { Name: string; LocalName: string; ShortName: string; Gender: string; VoiceType: string; Locale: string; StyleList: string[] }));\r\n            }\r\n        } else {\r\n            super(requestId, ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new PropertyCollection());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The list of voices\r\n     * @member SynthesisVoicesResult.prototype.voices\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceInfo[]} List of synthesized voices.\r\n     */\r\n    public get voices(): VoiceInfo[] {\r\n        return this.privVoices;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}