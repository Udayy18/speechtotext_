{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { VoiceProfileResult } from \"./Exports\";\n/**\n * Output format\n * @class VoiceProfilePhraseResult\n */\n\nexport class VoiceProfilePhraseResult extends VoiceProfileResult {\n  constructor(reason, statusText, json) {\n    super(reason, statusText);\n    this.privPhrases = [];\n    Contracts.throwIfNullOrUndefined(json, \"phrase result JSON\");\n\n    if (!!json.value && !!json.value[0]) {\n      for (const item of json.value) {\n        this.privPhrases.push(item.passPhrase || item.activationPhrase);\n      }\n    }\n  }\n\n  get phrases() {\n    return this.privPhrases;\n  }\n\n}","map":{"version":3,"sources":["src/sdk/VoiceProfilePhraseResult.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAEI,kBAFJ,QAGO,WAHP;AAKA;;;AAGG;;AACH,OAAM,MAAO,wBAAP,SAAwC,kBAAxC,CAA0D;AAG5D,EAAA,WAAA,CAAmB,MAAnB,EAAyC,UAAzC,EAA6D,IAA7D,EAA8H;AAC1H,UAAM,MAAN,EAAc,UAAd;AAHI,SAAA,WAAA,GAAwB,EAAxB;AAIJ,IAAA,SAAS,CAAC,sBAAV,CAAiC,IAAjC,EAAuC,oBAAvC;;AACA,QAAI,CAAC,CAAC,IAAI,CAAC,KAAP,IAAgB,CAAC,CAAC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAtB,EAAqC;AACjC,WAAK,MAAM,IAAX,IAAmB,IAAI,CAAC,KAAxB,EAA+B;AAC3B,aAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,gBAA9C;AACH;AACJ;AACJ;;AAED,MAAW,OAAX,GAAkB;AACd,WAAO,KAAK,WAAZ;AACH;;AAf2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ResultReason,\r\n    VoiceProfileResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfilePhraseResult\r\n */\r\nexport class VoiceProfilePhraseResult extends VoiceProfileResult {\r\n    private privPhrases: string[] = [];\r\n\r\n    public constructor(reason: ResultReason, statusText: string, json: {value: {passPhrase?: string; activationPhrase?: string}[]}) {\r\n        super(reason, statusText);\r\n        Contracts.throwIfNullOrUndefined(json, \"phrase result JSON\");\r\n        if (!!json.value && !!json.value[0]) {\r\n            for (const item of json.value) {\r\n                this.privPhrases.push(item.passPhrase || item.activationPhrase);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get phrases(): string[] {\r\n        return this.privPhrases;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}