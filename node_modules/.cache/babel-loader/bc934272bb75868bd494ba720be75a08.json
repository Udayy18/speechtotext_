{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { MessageType } from \"./ConnectionMessage\";\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport class RawWebsocketMessage {\n  constructor(messageType, payload, id) {\n    this.privPayload = null;\n\n    if (!payload) {\n      throw new ArgumentNullError(\"payload\");\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n    if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n      throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n\n    if (messageType === MessageType.Text && !(typeof payload === \"string\")) {\n      throw new InvalidOperationError(\"Payload must be a string\");\n    }\n\n    this.privMessageType = messageType;\n    this.privPayload = payload;\n    this.privId = id ? id : createNoDashGuid();\n  }\n\n  get messageType() {\n    return this.privMessageType;\n  }\n\n  get payload() {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this.privPayload;\n  }\n\n  get textContent() {\n    if (this.privMessageType === MessageType.Binary) {\n      throw new InvalidOperationError(\"Not supported for binary message\");\n    }\n\n    return this.privPayload;\n  }\n\n  get binaryContent() {\n    if (this.privMessageType === MessageType.Text) {\n      throw new InvalidOperationError(\"Not supported for text message\");\n    }\n\n    return this.privPayload;\n  }\n\n  get id() {\n    return this.privId;\n  }\n\n}","map":{"version":3,"sources":["src/common/RawWebsocketMessage.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA,SAAS,WAAT,QAA4B,qBAA5B;AACA,SAAS,iBAAT,EAA4B,qBAA5B,QAAyD,SAAzD;AACA,SAAS,gBAAT,QAAiC,QAAjC;AAEA,OAAM,MAAO,mBAAP,CAA0B;AAK5B,EAAA,WAAA,CAAmB,WAAnB,EAA6C,OAA7C,EAA2D,EAA3D,EAAsE;AAH9D,SAAA,WAAA,GAAmB,IAAnB;;AAIJ,QAAI,CAAC,OAAL,EAAc;AACV,YAAM,IAAI,iBAAJ,CAAsB,SAAtB,CAAN;AACH,KAHiE,CAKlE;;;AACA,QAAI,WAAW,KAAK,WAAW,CAAC,MAA5B,IAAsC,OAAO,CAAC,SAAR,CAAkB,WAAlB,CAA8B,IAA9B,KAAuC,aAAjF,EAAgG;AAC5F,YAAM,IAAI,qBAAJ,CAA0B,6BAA1B,CAAN;AACH;;AAED,QAAI,WAAW,KAAK,WAAW,CAAC,IAA5B,IAAoC,EAAE,OAAQ,OAAR,KAAqB,QAAvB,CAAxC,EAA0E;AACtE,YAAM,IAAI,qBAAJ,CAA0B,0BAA1B,CAAN;AACH;;AAED,SAAK,eAAL,GAAuB,WAAvB;AACA,SAAK,WAAL,GAAmB,OAAnB;AACA,SAAK,MAAL,GAAc,EAAE,GAAG,EAAH,GAAQ,gBAAgB,EAAxC;AACH;;AAED,MAAW,WAAX,GAAsB;AAClB,WAAO,KAAK,eAAZ;AACH;;AAED,MAAW,OAAX,GAAkB;AACd;AACA,WAAO,KAAK,WAAZ;AACH;;AAED,MAAW,WAAX,GAAsB;AAClB,QAAI,KAAK,eAAL,KAAyB,WAAW,CAAC,MAAzC,EAAiD;AAC7C,YAAM,IAAI,qBAAJ,CAA0B,kCAA1B,CAAN;AACH;;AAED,WAAO,KAAK,WAAZ;AACH;;AAED,MAAW,aAAX,GAAwB;AACpB,QAAI,KAAK,eAAL,KAAyB,WAAW,CAAC,IAAzC,EAA+C;AAC3C,YAAM,IAAI,qBAAJ,CAA0B,gCAA1B,CAAN;AACH;;AAED,WAAO,KAAK,WAAZ;AACH;;AAED,MAAW,EAAX,GAAa;AACT,WAAO,KAAK,MAAZ;AACH;;AAnD2B","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload as ArrayBuffer;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}