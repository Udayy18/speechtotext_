{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nexport class SpeechContext {\n  constructor(dynamicGrammar) {\n    this.privContext = {};\n    this.privDynamicGrammar = dynamicGrammar;\n  }\n  /**\n   * Adds a section to the speech.context object.\n   * @param sectionName Name of the section to add.\n   * @param value JSON serializable object that represents the value.\n   */\n\n\n  setSection(sectionName, value) {\n    this.privContext[sectionName] = value;\n  }\n  /**\n   * @Internal\n   * This is only used by pronunciation assessment config.\n   * Do not use externally, object returned will change without warning or notice.\n   */\n\n\n  setPronunciationAssessmentParams(params) {\n    if (this.privContext.phraseDetection === undefined) {\n      this.privContext.phraseDetection = {\n        enrichment: {\n          pronunciationAssessment: {}\n        }\n      };\n    }\n\n    this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\n\n    if (this.privContext.phraseOutput === undefined) {\n      this.privContext.phraseOutput = {\n        detailed: {\n          options: []\n        },\n        format: {}\n      };\n    }\n\n    if (this.privContext.phraseOutput.detailed === undefined) {\n      this.privContext.phraseOutput.detailed = {\n        options: []\n      };\n    }\n\n    this.privContext.phraseOutput.format = \"Detailed\";\n    this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\n\n    if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\n      this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\n    }\n\n    if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\n      this.privContext.phraseOutput.detailed.options.push(\"SNR\");\n    }\n  }\n\n  toJSON() {\n    const dgi = this.privDynamicGrammar.generateGrammarObject();\n    this.setSection(\"dgi\", dgi);\n    const ret = JSON.stringify(this.privContext);\n    return ret;\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/SpeechContext.ts"],"names":[],"mappings":"AAAA;AACA;;AAyBA;;;AAGG;AACH,OAAM,MAAO,aAAP,CAAoB;AAItB,EAAA,WAAA,CAAmB,cAAnB,EAAwD;AAHhD,SAAA,WAAA,GAA6B,EAA7B;AAIJ,SAAK,kBAAL,GAA0B,cAA1B;AACH;AAED;;;;AAIG;;;AACI,EAAA,UAAU,CAAC,WAAD,EAAsB,KAAtB,EAA6C;AAC1D,SAAK,WAAL,CAAiB,WAAjB,IAAgC,KAAhC;AACH;AAED;;;;AAIG;;;AACI,EAAA,gCAAgC,CAAC,MAAD,EAAe;AAClD,QAAI,KAAK,WAAL,CAAiB,eAAjB,KAAqC,SAAzC,EAAoD;AAChD,WAAK,WAAL,CAAiB,eAAjB,GAAmC;AAC/B,QAAA,UAAU,EAAE;AACR,UAAA,uBAAuB,EAAE;AADjB;AADmB,OAAnC;AAKH;;AACD,SAAK,WAAL,CAAiB,eAAjB,CAAiC,UAAjC,CAA4C,uBAA5C,GAAsE,IAAI,CAAC,KAAL,CAAW,MAAX,CAAtE;;AACA,QAAI,KAAK,WAAL,CAAiB,YAAjB,KAAkC,SAAtC,EAAiD;AAC7C,WAAK,WAAL,CAAiB,YAAjB,GAAgC;AAC5B,QAAA,QAAQ,EAAE;AACN,UAAA,OAAO,EAAE;AADH,SADkB;AAI5B,QAAA,MAAM,EAAE;AAJoB,OAAhC;AAMH;;AACD,QAAI,KAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,KAA2C,SAA/C,EAA0D;AACtD,WAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,GAAyC;AACrC,QAAA,OAAO,EAAE;AAD4B,OAAzC;AAGH;;AACD,SAAK,WAAL,CAAiB,YAAjB,CAA8B,MAA9B,GAAuC,UAAvC;AACA,SAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,CAAuC,OAAvC,CAA+C,IAA/C,CAAoD,yBAApD;;AACA,QAAI,KAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,CAAuC,OAAvC,CAA+C,OAA/C,CAAuD,aAAvD,MAA0E,CAAC,CAA/E,EAAkF;AAC9E,WAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,CAAuC,OAAvC,CAA+C,IAA/C,CAAoD,aAApD;AACH;;AACD,QAAI,KAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,CAAuC,OAAvC,CAA+C,OAA/C,CAAuD,KAAvD,MAAkE,CAAC,CAAvE,EAA0E;AACtE,WAAK,WAAL,CAAiB,YAAjB,CAA8B,QAA9B,CAAuC,OAAvC,CAA+C,IAA/C,CAAoD,KAApD;AACH;AACJ;;AAEM,EAAA,MAAM,GAAA;AAET,UAAM,GAAG,GAAoB,KAAK,kBAAL,CAAwB,qBAAxB,EAA7B;AACA,SAAK,UAAL,CAAgB,KAAhB,EAAuB,GAAvB;AAEA,UAAM,GAAG,GAAW,IAAI,CAAC,SAAL,CAAe,KAAK,WAApB,CAApB;AACA,WAAO,GAAP;AACH;;AA7DqB","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports\";\r\n\r\ninterface Context {\r\n    [section: string]: any;\r\n}\r\n\r\ninterface PhraseContext {\r\n    [section: string]: any;\r\n    phraseDetection?: {\r\n        enrichment?: {\r\n            pronunciationAssessment: any;\r\n        };\r\n    };\r\n    phraseOutput?: {\r\n        detailed?: {\r\n            options?: string[];\r\n        };\r\n        format?: any;\r\n    };\r\n}\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: PhraseContext = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    public constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: string | Context): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) as Context;\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        if (this.privContext.phraseOutput.detailed === undefined) {\r\n            this.privContext.phraseOutput.detailed = {\r\n                options: []\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\r\n        }\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}