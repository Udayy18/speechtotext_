{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class ConversationCommon {\n  constructor(audioConfig) {\n    this.privAudioConfig = audioConfig;\n  }\n\n  handleCallback(cb, err) {\n    if (!!cb) {\n      try {\n        cb();\n      } catch (e) {\n        if (!!err) {\n          err(e);\n        }\n      }\n\n      cb = undefined;\n    }\n  }\n\n  handleError(error, err) {\n    if (!!err) {\n      if (error instanceof Error) {\n        const typedError = error;\n        err(typedError.name + \": \" + typedError.message);\n      } else {\n        err(error);\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["src/sdk/Transcription/ConversationCommon.ts"],"names":[],"mappings":"AAAA;AACA;AAQA,OAAM,MAAO,kBAAP,CAAyB;AAK3B,EAAA,WAAA,CAAmB,WAAnB,EAA4C;AACxC,SAAK,eAAL,GAAuB,WAAvB;AACH;;AAES,EAAA,cAAc,CAAC,EAAD,EAAe,GAAf,EAA4B;AAChD,QAAI,CAAC,CAAC,EAAN,EAAU;AACN,UAAI;AACA,QAAA,EAAE;AACL,OAFD,CAEE,OAAO,CAAP,EAAU;AACR,YAAI,CAAC,CAAC,GAAN,EAAW;AACP,UAAA,GAAG,CAAC,CAAD,CAAH;AACH;AACJ;;AACD,MAAA,EAAE,GAAG,SAAL;AACH;AACJ;;AAES,EAAA,WAAW,CAAC,KAAD,EAAa,GAAb,EAA0B;AAC3C,QAAI,CAAC,CAAC,GAAN,EAAW;AACP,UAAI,KAAK,YAAY,KAArB,EAA4B;AACxB,cAAM,UAAU,GAAU,KAA1B;AACA,QAAA,GAAG,CAAC,UAAU,CAAC,IAAX,GAAkB,IAAlB,GAAyB,UAAU,CAAC,OAArC,CAAH;AAEH,OAJD,MAIO;AACH,QAAA,GAAG,CAAC,KAAD,CAAH;AACH;AACJ;AACJ;;AAhC0B","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AudioConfig,\r\n    SpeechTranslationConfig\r\n} from \"../Exports\";\r\nimport { Callback } from \"./IConversation\";\r\n\r\nexport class ConversationCommon {\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    protected privSpeechTranslationConfig: SpeechTranslationConfig;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n    }\r\n\r\n    protected handleCallback(cb: Callback, err: Callback): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    protected handleError(error: any, err: Callback): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}