{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SynthesisResult } from \"./Exports\";\n/**\n * Defines result of speech synthesis.\n * @class SpeechSynthesisResult\n * Added in version 1.11.0\n */\n\nexport class SpeechSynthesisResult extends SynthesisResult {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {string} resultId - The result id.\n   * @param {ResultReason} reason - The reason.\n   * @param {ArrayBuffer} audioData - The synthesized audio binary.\n   * @param {string} errorDetails - Error details, if provided.\n   * @param {PropertyCollection} properties - Additional properties, if provided.\n   * @param {number} audioDuration - The audio duration.\n   */\n  constructor(resultId, reason, audioData, errorDetails, properties, audioDuration) {\n    super(resultId, reason, errorDetails, properties);\n    this.privAudioData = audioData;\n    this.privAudioDuration = audioDuration;\n  }\n  /**\n   * The synthesized audio data\n   * @member SpeechSynthesisResult.prototype.audioData\n   * @function\n   * @public\n   * @returns {ArrayBuffer} The synthesized audio data.\n   */\n\n\n  get audioData() {\n    return this.privAudioData;\n  }\n  /**\n   * The time duration of synthesized audio, in ticks (100 nanoseconds).\n   * @member SpeechSynthesisResult.prototype.audioDuration\n   * @function\n   * @public\n   * @returns {number} The time duration of synthesized audio.\n   */\n\n\n  get audioDuration() {\n    return this.privAudioDuration;\n  }\n\n}","map":{"version":3,"sources":["src/sdk/SpeechSynthesisResult.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAGI,eAHJ,QAIO,WAJP;AAMA;;;;AAIG;;AACH,OAAM,MAAO,qBAAP,SAAqC,eAArC,CAAoD;AAItD;;;;;;;;;AASG;AACH,EAAA,WAAA,CAAmB,QAAnB,EAAsC,MAAtC,EAA6D,SAA7D,EACY,YADZ,EACmC,UADnC,EACoE,aADpE,EAC0F;AACtF,UAAM,QAAN,EAAgB,MAAhB,EAAwB,YAAxB,EAAsC,UAAtC;AACA,SAAK,aAAL,GAAqB,SAArB;AACA,SAAK,iBAAL,GAAyB,aAAzB;AACH;AAED;;;;;;AAMG;;;AACH,MAAW,SAAX,GAAoB;AAChB,WAAO,KAAK,aAAZ;AACH;AAED;;;;;;AAMG;;;AACH,MAAW,aAAX,GAAwB;AACpB,WAAO,KAAK,iBAAZ;AACH;;AAzCqD","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    PropertyCollection,\r\n    ResultReason,\r\n    SynthesisResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult extends SynthesisResult {\r\n    private readonly privAudioData: ArrayBuffer;\r\n    private readonly privAudioDuration: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {ArrayBuffer} audioData - The synthesized audio binary.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     * @param {number} audioDuration - The audio duration.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection, audioDuration?: number) {\r\n        super(resultId, reason, errorDetails, properties);\r\n        this.privAudioData = audioData;\r\n        this.privAudioDuration = audioDuration;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n\r\n    /**\r\n     * The time duration of synthesized audio, in ticks (100 nanoseconds).\r\n     * @member SpeechSynthesisResult.prototype.audioDuration\r\n     * @function\r\n     * @public\r\n     * @returns {number} The time duration of synthesized audio.\r\n     */\r\n    public get audioDuration(): number {\r\n        return this.privAudioDuration;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}